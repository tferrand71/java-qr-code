#!/bin/bash

# Script de test de syntaxe Java (sans compilation)
# V√©rifie que le code Java est syntaxiquement correct

echo "üîç V√©rification de la syntaxe Java..."

# V√©rifier que tous les fichiers Java existent
java_files=(
    "src/Main.java"
    "src/controller/QRCodeController.java"
    "src/model/QRCodeModel.java"
    "src/model/UserProfile.java"
    "src/view/QRCodeView.java"
    "src/utils/QRCodeGeneratorUtil.java"
    "src/utils/PDFGeneratorUtil.java"
    "src/utils/ProjectManager.java"
)

missing_files=()

for file in "${java_files[@]}"; do
    if [ ! -f "$file" ]; then
        missing_files+=("$file")
    fi
done

if [ ${#missing_files[@]} -gt 0 ]; then
    echo "‚ùå Fichiers manquants:"
    for file in "${missing_files[@]}"; do
        echo "   - $file"
    done
    exit 1
fi

echo "‚úÖ Tous les fichiers Java sont pr√©sents"

# V√©rifier la syntaxe basique (parenth√®ses, accolades, etc.)
echo "üîç V√©rification de la syntaxe basique..."

syntax_errors=()

for file in "${java_files[@]}"; do
    # V√©rifier les parenth√®ses √©quilibr√©es
    open_paren=$(grep -o '(' "$file" | wc -l)
    close_paren=$(grep -o ')' "$file" | wc -l)
    
    if [ "$open_paren" -ne "$close_paren" ]; then
        syntax_errors+=("$file: Parenth√®ses non √©quilibr√©es ($open_paren ouverts, $close_paren ferm√©s)")
    fi
    
    # V√©rifier les accolades √©quilibr√©es
    open_brace=$(grep -o '{' "$file" | wc -l)
    close_brace=$(grep -o '}' "$file" | wc -l)
    
    if [ "$open_brace" -ne "$close_brace" ]; then
        syntax_errors+=("$file: Accolades non √©quilibr√©es ($open_brace ouvertes, $close_brace ferm√©es)")
    fi
    
    # V√©rifier les points-virgules manquants √† la fin des lignes importantes
    if grep -q "private.*=.*new.*[^;]$" "$file"; then
        syntax_errors+=("$file: Point-virgule manquant possible")
    fi
done

if [ ${#syntax_errors[@]} -gt 0 ]; then
    echo "‚ùå Erreurs de syntaxe d√©tect√©es:"
    for error in "${syntax_errors[@]}"; do
        echo "   - $error"
    done
    exit 1
fi

echo "‚úÖ Syntaxe basique correcte"

# V√©rifier les imports et packages
echo "üîç V√©rification des imports..."

for file in "${java_files[@]}"; do
    # V√©rifier que les fichiers ont un package d√©clar√©
    if ! grep -q "^package " "$file"; then
        if [ "$file" != "src/Main.java" ]; then
            syntax_errors+=("$file: Pas de d√©claration de package")
        fi
    fi
done

if [ ${#syntax_errors[@]} -gt 0 ]; then
    echo "‚ùå Probl√®mes de structure d√©tect√©s:"
    for error in "${syntax_errors[@]}"; do
        echo "   - $error"
    done
    exit 1
fi

echo "‚úÖ Structure des packages correcte"

# V√©rifier les m√©thodes principales
echo "üîç V√©rification des m√©thodes principales..."

# V√©rifier Main.java
if ! grep -q "public static void main" "src/Main.java"; then
    echo "‚ùå M√©thode main manquante dans Main.java"
    exit 1
fi

# V√©rifier QRCodeView.java
if ! grep -q "public QRCodeView()" "src/view/QRCodeView.java"; then
    echo "‚ùå Constructeur manquant dans QRCodeView.java"
    exit 1
fi

# V√©rifier QRCodeController.java
if ! grep -q "public QRCodeController" "src/controller/QRCodeController.java"; then
    echo "‚ùå Constructeur manquant dans QRCodeController.java"
    exit 1
fi

echo "‚úÖ M√©thodes principales pr√©sentes"

echo ""
echo "üéâ V√©rification termin√©e avec succ√®s !"
echo "üìù Le code Java semble syntaxiquement correct"
echo ""
echo "‚ö†Ô∏è  Pour compiler et ex√©cuter, vous devez installer Java JDK:"
echo "   - macOS: brew install openjdk@11"
echo "   - Ubuntu: sudo apt install openjdk-11-jdk"
echo "   - Windows: T√©l√©charger depuis https://adoptium.net/"
echo ""
echo "üöÄ Une fois Java install√©, utilisez: ./compile.sh"
